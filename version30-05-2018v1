#En nuestro proyecto queremos realizar un informe detallado con estadísticas de las vulnerabilidades mas comunes filtradas por años, por criticidad, etc y dónde se muestren los servicios más afectados.	
  
#Descargaremos e instalaremos los siguientes packages:
~~~
install.packages("yarrr")
install.packages("dplyr")
install.packages("ggplot2")
library("yarrr")
library("dplyr")
library("ggplot2")
~~~
#Descargamos el DataSet de la siguiente URL y asignamos el contenido de **tempfile** a **kk**. 
~~~
download.file(url = "https://github.com/r-net-tools/security.datasets/raw/master/net.security/sysdata.rda", kk <- tempfile())
~~~
#Cargamos el contenido del fichero dataset
~~~
load(file = kk)
~~~
#Obtenemos los CVES del DataSet
~~~
cves2 <- netsec.data$datasets$cves
~~~
# Modificamos el formato de las fechas ya que nos podría dar problemas. Para ello utilizamos el siguiente código para pasar **POSIXlt** a **POSIXct**
~~~
cves2$published.date <- as.POSIXct.POSIXlt(cves2$published.date)
cves2$last.modified <- as.POSIXct.POSIXlt(cves2$last.modified)
~~~
#Obtenemos el **id** de los CVES y lo asignamos a la variable **cves2_id**
~~~
cves2_id<-tidyr::separate(cves2, "cve.id", c("cve","y","id"), sep="-")
~~~
#Queremos mostrar una gráfica dónde se visualice todos los CEVS filtrados por años desde el 1999 hasta el 2018.
#Debido que sería mostrar una gráfica con muchos años y quedaría visualmente muy pequeño, hemos decidido dividir la gráfica en dos partes dónde se muestre por un lado los CVES desde el 1999 hasta el 2008 y del 2009 hasta el 2018.
~~~
subset1999_2008 <- subset(cves2_id, cves2_id$y <= 2008 )
subset2009_2018 <- subset(cves2_id, cves2_id$y > 2008 )
~~~
#Ahora mostramos los datos comentados anteriormente.
~~~
yarrr::pirateplot(formula = subset2009_2018$cvss2.score ~ subset2009_2018$y,
           data = subset2009_2018,
           main = "Cves puntuación por año 2009-2018")
~~~
~~~
yarrr::pirateplot(formula = subset1999_2008$cvss2.score ~ subset1999_2008$y,
           data = subset1999_2008,
           main = "Cves puntuación por año 1999-2008")
~~~
#Creamos un vector con el numero de CVES registrados por año. Al vector lo llamamos **id_by_year**.
~~~
id_by_year<- with(cves2_id, table(y))
~~~
#Generamos la grafica con los datos obtenidos. A la gráfica la llamamos **barplot_id_by_year**.
~~~
barplot_id_by_year<-barplot(id_by_year, ylim=c(0,15500), las=2 )
text(barplot_id_by_year, id_by_year+1, labels = as.character(id_by_year),cex=0.58, pos = 3)
~~~
#scores by year
~~~
finalData<-subset(cves2_id,!(is.na(cves2_id$cvss2.score)))
id_by_year_w_score_wo_na<- with(finalData , table(y))
a<- 1999:2018
sumatori <- numeric(length = length(a))

for (i in seq_along(a)) {
  sumatori[i] <- sum(subset(finalData,finalData$y == a[i])$cvss2.score, na.rm = T) 
}
resultat<- sumatori/id_by_year_w_score_wo_na[names(id_by_year_w_score_wo_na)]

plot(resultat,type="o", ylim= c(0,10), las=2)
abline(lm(resultat ~ id_by_year_w_score_wo_na[names(id_by_year_w_score_wo_na)]), col='blue')
~~~
#obtain cpes parts afected
cpes <- netsec.data$datasets$cpes
cpes_part<-with(cpes, table(part))
partplot<-barplot(cpes_part, ylim=c(0,130000), las=1)
text(partplot, cpes_part+1, labels = as.character(cpes_part),cex=1, pos = 3)


#cpes vendors
cpes_vendor <- with(cpes,table(vendor))
cpes_a <- subset(cpes,(cpes$part=="a"))
cpes_h <- subset(cpes,(cpes$part=="h"))
cpes_o <- subset(cpes,(cpes$part=="o"))
cpes_vendor_a <- with(cpes_a, table(vendor))
cpes_vendor_h <- with(cpes_h, table(vendor))
cpes_vendor_o <- with(cpes_o, table(vendor))

####Cambiar tamaño titulo
top5_piecharts <- function(data, type){
  top5 <-sort(data, decreasing = T)[1:5]
  others<- NaN
  names(others) <- c("Others")
  others[["Others"]] <-sum(data)-sum(top5)
  others[["Top"]] <-sum(top5)
  top5string<- c("Top 5 de fabricantes con más vulnerabilidades para ", type)
  top5vothersstring<-c("Top 5 de fabricates con más vulnerabilidades para ", type, " vs otros")
  pie(top5,
      main=top5string)
  pie(others,
      main=top5vothersstring)
}

top5_piecharts(cpes_vendor_a, "aplicaciones")
top5_piecharts(cpes_vendor_h, "hardware")
top5_piecharts(cpes_vendor_o, "sistemas operativos")
